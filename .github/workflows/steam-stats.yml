name: Update Steam Stats

on:
  schedule:
    - cron: '0 12 * * *'  # Her gün TSİ 15:00'te çalışır (UTC 12:00)
  workflow_dispatch:       # Manuel çalıştırma seçeneği

jobs:
  update-steam-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-valve

      - name: Fetch Steam data with retries
        env:
          STEAM_API_KEY: ${{ secrets.STEAM_API_KEY }}  # GitHub Secrets'ta saklanmalı
          STEAM_ID64: "76561198070829618"              # Sizin SteamID64'niz
        run: |
          python -c '
          import requests, json, os, time
          from datetime import datetime

          STEAM_API_KEY = os.environ["STEAM_API_KEY"]
          STEAM_ID64 = os.environ["STEAM_ID64"]

          def get_steam_data():
              try:
                  # 1. Kullanıcı bilgileri (3 deneme yapar)
                  for attempt in range(3):
                      try:
                          profile_url = f"https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key={STEAM_API_KEY}&steamids={STEAM_ID64}"
                          profile_data = requests.get(profile_url, timeout=10).json()
                          
                          if profile_data.get("response", {}).get("players"):
                              break
                      except:
                          if attempt == 2:
                              return {"status": "error", "message": "Max retries reached for profile data"}
                          time.sleep(5)

                  # 2. Seviye bilgisi
                  badges_url = f"https://api.steampowered.com/IPlayerService/GetBadges/v1/?key={STEAM_API_KEY}&steamid={STEAM_ID64}"
                  badges_data = requests.get(badges_url, timeout=10).json()

                  # 3. Son oynanan oyun
                  recent_url = f"https://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v1/?key={STEAM_API_KEY}&steamid={STEAM_ID64}&count=1"
                  recent_data = requests.get(recent_url, timeout=10).json()

                  return {
                      "status": "success",
                      "timestamp": datetime.now().isoformat(),
                      "profile": profile_data["response"]["players"][0],
                      "badges": badges_data.get("response", {}),
                      "recent_games": recent_data.get("response", {}).get("games", [{}])[0]
                  }

              except Exception as e:
                  return {"status": "error", "message": str(e)}

          data = get_steam_data()
          with open("steam_data.json", "w") as f:
              json.dump(data, f, indent=2)
          '

      - name: Generate Markdown
        run: |
          # Hata durumunda özel mesaj oluştur
          if ! jq -e '.status == "success"' steam_data.json; then
            echo "## 🎮 Steam İstatistikleri" > steam_stats.md
            echo "" >> steam_stats.md
            echo "⚠️ Güncel veriler alınamadı (Son deneme: $(date '+%d.%m.%Y %H:%M'))" >> steam_stats.md
            echo "" >> steam_stats.md
            echo "**Hata Detayı:**" >> steam_stats.md
            echo '```' >> steam_stats.md
            jq -r '.message' steam_data.json >> steam_stats.md
            echo '```' >> steam_stats.md
            exit 0
          fi

          # Başarılı durumda markdown oluştur
          echo "## 🎮 Steam İstatistiklerim" > steam_stats.md
          echo "" >> steam_stats.md
          
          # Profil resmi (256x256 boyutunda)
          echo "![Steam Avatar](https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/$(jq -r '.profile.avatarhash' steam_data.json)_full.jpg)" >> steam_stats.md
          echo "" >> steam_stats.md
          
          # Temel bilgiler
          echo "### $(jq -r '.profile.personaname' steam_data.json)" >> steam_stats.md
          echo "" >> steam_stats.md
          echo "- **Durum:** $(jq -r '.profile.personastate' steam_data.json | sed 's/0/🔴 Offline/;s/1/🟢 Online/;s/2/🟡 Busy/;s/3/🟠 Away/;s/4/🟣 Snooze/;s/5/🔵 Looking to trade/;s/6/🟢 Looking to play/')" >> steam_stats.md
          echo "- **Seviye:** $(jq -r '.badges.player_level' steam_data.json)" >> steam_stats.md
          
          # Son oynanan oyun
          if [ "$(jq -r '.recent_games | has("name")' steam_data.json)" = "true" ]; then
            echo "- **Son Oyun:** $(jq -r '.recent_games.name' steam_data.json) ($(jq -r '(.recent_games.playtime_2weeks/60)|round' steam_data.json) saat son 2 hafta)" >> steam_stats.md
          fi
          
          echo "" >> steam_stats.md
          echo "[🛡️ Steam Profilim](https://steamcommunity.com/profiles/76561198070829618)" >> steam_stats.md
          echo "" >> steam_stats.md
          echo "*Son güncelleme: $(date '+%d.%m.%Y %H:%M')*" >> steam_stats.md

      - name: Update README
        run: |
          # README'yi güncelle (eski istatistikleri silerek)
          sed -i '/## � Steam İstatistiklerim/,/## /{/## /!d}' README.md
          sed -i '/## 🎮 Steam İstatistiklerim/r steam_stats.md' README.md
          
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add README.md
          git commit -m "🔁 Steam istatistikleri güncellendi [skip ci]"
          git push
